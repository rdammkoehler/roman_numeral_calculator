#test two_minus_one_is_one
	subtract(result, "II", "I");
	ck_assert_str_eq(result, "I");
#test three_minus_one_is_two
	subtract(result, "III", "I");
	ck_assert_str_eq(result, "II");
#test four_minus_one_is_three
	subtract(result, "IV", "I");
	ck_assert_str_eq(result, "III");
#test five_minus_four_is_one
	subtract(result, "V", "IV");
	ck_assert_str_eq(result, "I");
#test ten_minus_nine_is_one
	subtract(result, "X", "IX");
	ck_assert_str_eq(result, "I");
#test fifty_minus_fortynine_is_one
	subtract(result, "L", "XLIX");
	ck_assert_str_eq(result, "I");
#test onehundred_minus_nintynine_is_one
	subtract(result, "C", "XCIX");
	ck_assert_str_eq(result, "I");
#test fivehundred_minus_fourhundred_is_onehundred
	subtract(result, "D", "CD");
	ck_assert_str_eq(result, "C");
#test onethousand_minus_twohundred_is_eighthundred
	subtract(result, "M", "CC");
	ck_assert_str_eq(result, "DCCC");
#test cannot_be_negative
	subtract(result, "X", "C");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_left_oper_to_big
	subtract(result, "MMMM", "I");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_right_oper_to_big
	subtract(result, "I", "MMMM");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_left_oper_empty
	subtract(result, "", "XI");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_right_oper_empty
	subtract(result, "XI", "");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_left_oper_null
	subtract(result, NULL, "X");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_right_oper_null
	subtract(result, "X", NULL);
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_left_oper_not_roman
	subtract(result, "xi", "XI");
	ck_assert_str_eq(result, "ERROR");
#test sub_errors_on_invalid_input_right_oper_not_roman
	subtract(result, "XI", "abc");
	ck_assert_str_eq(result, "ERROR");
